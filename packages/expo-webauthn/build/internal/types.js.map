{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/internal/types.ts"],"names":[],"mappings":"AAiBA;;GAEG;AACH,MAAM,OAAO,aAAc,SAAQ,KAAK;IACtC,KAAK,CAAQ;IACb,YACE,OAAe,EACf,OAAoD;QAEpD,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAA;QACjC,IAAI,OAAO,EAAE,YAAY,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAA;QAC1C,CAAC;QACD,IAAI,OAAO,EAAE,KAAK,EAAE,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;QAC5B,CAAC;IACH,CAAC;IAED,YAAY,CAAW;CACxB","sourcesContent":["/**\n * Supported authenticator transport types in iOS AuthenticationServices\n * @see https://developer.apple.com/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport\n * @internal\n */\nexport type AuthenticatorTransportType = 'ble' | 'hybrid' | 'nfc' | 'usb'\n\n/**\n * User entity format for credential operations\n * @internal\n */\nexport interface CredentialUserEntity {\n  displayName: string\n  id: string\n  name: string\n}\n\n/**\n * Base error class for WebAuthn operations\n */\nexport class WebAuthnError extends Error {\n  cause?: Error\n  constructor(\n    message: string,\n    options?: { metaMessages?: string[]; cause?: Error },\n  ) {\n    super(message)\n    this.name = this.constructor.name\n    if (options?.metaMessages) {\n      this.metaMessages = options.metaMessages\n    }\n    if (options?.cause) {\n      this.cause = options.cause\n    }\n  }\n\n  metaMessages?: string[]\n}\n"]}