{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/internal/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAC,MAAM,IAAI,CAAA;AAG1B;;;;;GAKG;AACH,MAAM,UAAU,oBAAoB,CAAC,MAAoB;IACvD,MAAM,UAAU,GACd,MAAM,YAAY,UAAU;QAC1B,CAAC,CAAC,MAAM;QACR,CAAC,CAAC,IAAI,UAAU,CAAC,MAAM,YAAY,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;IAC5E,OAAO,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;AACrC,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,mBAAmB,CAAC,MAAc;IAChD,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IACzC,OAAO,UAAU,CAAC,MAAM,CAAA;AAC1B,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,sBAAsB,CAAC,SAAiB;IACtD,kFAAkF;IAClF,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAC7B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACrD,GAAG,CACJ,CAAA;IACD,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IACzC,OAAO,UAAU,CAAC,MAAM,CAAA;AAC1B,CAAC","sourcesContent":["import { Base64} from 'ox'\nimport type { BufferSource } from './webauthn'\n\n/**\n * Converts a BufferSource to a base64 string.\n *\n * @param buffer - The BufferSource to convert\n * @returns A base64 string representation of the buffer\n */\nexport function bufferSourceToBase64(buffer: BufferSource): string {\n  const uint8Array =\n    buffer instanceof Uint8Array\n      ? buffer\n      : new Uint8Array(buffer instanceof ArrayBuffer ? buffer : buffer.buffer)\n  return Base64.fromBytes(uint8Array)\n}\n\n/**\n * Converts a base64 string to an ArrayBuffer\n * @internal\n */\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const uint8Array = Base64.toBytes(base64)\n  return uint8Array.buffer\n}\n\n/**\n * Converts a base64url string to an ArrayBuffer, handling URL-safe characters\n * and padding appropriately.\n */\nexport function base64URLToArrayBuffer(base64url: string): ArrayBuffer {\n  // Base64.toBytes already handles URL-safe characters, just need to handle padding\n  const padded = base64url.padEnd(\n    base64url.length + ((4 - (base64url.length % 4)) % 4),\n    '=',\n  )\n  const uint8Array = Base64.toBytes(padded)\n  return uint8Array.buffer\n}\n"]}